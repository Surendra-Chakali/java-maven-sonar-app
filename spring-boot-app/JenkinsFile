pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }

  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        //sh 'cd spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      
      steps {
          withSonarQubeEnv('SonarQube') {
              sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.projectName=test -Dsonar.projectKey=test'
          }
        
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "dockerJenkins-cicd:${BUILD_NUMBER}"
      }
      steps {
          sh 'docker build -t ${DOCKER_IMAGE} spring-boot-app/.'
          withDockerRegistry(credentialsId: 'dockerjenkins', url: 'surendra548/jenkinscicd') {
             sh 'docker push ${DOCKER_IMAGE}'
          }
          //sh 'docker logout'
      }

      }


    }
  }
